function varargout = get_data(varargin)
% GET_DATA M-file for get_data.fig
%      GET_DATA, by itself, creates a new GET_DATA or raises the existing
%      singleton*.
%
%      H = GET_DATA returns the handle to a new GET_DATA or the handle to
%      the existing singleton*.
%
%      GET_DATA('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in GET_DATA.M with the given input arguments.
%
%      GET_DATA('Property','Value',...) creates a new GET_DATA or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before get_data_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to get_data_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Copyright 2002-2003 The MathWorks, Inc.

% Edit the above text to modify the response to help get_data

% Last Modified by GUIDE v2.5 19-May-2007 17:27:20

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @get_data_OpeningFcn, ...
                   'gui_OutputFcn',  @get_data_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before get_data is made visible.
function get_data_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to get_data (see VARARGIN)

handles.data.strainfile_name = 0;
handles.data.imagedir_name = 0;
handles.data.targetdir_name = 0;

handles.data.young = 10000;
handles.data.poisson = 0.5;
handles.data.pix_durch_my = 0.067;
handles.data.strain = []; 

% Choose default command line output for get_data
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes get_data wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = get_data_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in strainfile_browse.
function strainfile_browse_Callback(hObject, eventdata, handles)
% hObject    handle to strainfile_browse (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
[filename, pathname] = uigetfile('*.mat', 'Select a .mat file');
if ~isequal(filename,0)
    handles.data.strainfile_name = fullfile(pathname, filename);
    if size(handles.data.strainfile_name,2) > 55
        disp_string = ['... ',handles.data.strainfile_name(end-55:end)];
    else
        disp_string = handles.data.strainfile_name;
    end
    set(handles.strainfile_win,'string',disp_string);
end
guidata(hObject, handles);

% --- Executes on button press in imagedir_browse.
function imagedir_browse_Callback(hObject, eventdata, handles)
% hObject    handle to imagedir_browse (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
handles.data.imagedir_name = uigetdir('','Location of cell images');
if ~isequal(handles.data.imagedir_name,0)
    if size(handles.data.imagedir_name,2) > 55
        disp_string = ['... ',handles.data.imagedir_name(end-55:end)];
    else
        disp_string = handles.data.imagedir_name;
    end
    set(handles.imagedir_win,'String',disp_string);
end
guidata(hObject, handles);

% --- Executes on button press in targetdir_browse.
function targetdir_browse_Callback(hObject, eventdata, handles)
% hObject    handle to targetdir_browse (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
handles.data.targetdir_name = uigetdir('','Location to save results in');
if ~isequal(handles.data.targetdir_name,0)
    if size(handles.data.targetdir_name,2) > 55
        disp_string = ['... ',handles.data.targetdir_name(end-55:end)];
    else
        disp_string = handles.data.targetdir_name;
    end
    set(handles.targetdir_win,'String',disp_string);
end
guidata(hObject, handles);



function young_win_Callback(hObject, eventdata, handles)
% hObject    handle to young_win (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of young_win as text
%        str2double(get(hObject,'String')) returns contents of young_win as a double
written = str2double(get(hObject,'String'));
if ~isnan(written) && written > 0
    handles.data.young = written*1000;
else
    errordlg('The young modulus must be given as a positive number.','Error');
    set(handles.young_win,'String', num2str(handles.data.young/1000));
end
guidata(hObject, handles);

 
% --- Executes during object creation, after setting all properties.
function young_win_CreateFcn(hObject, eventdata, handles)
% hObject    handle to young_win (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end


function poisson_win_Callback(hObject, eventdata, handles)
% hObject    handle to poisson_win (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of poisson_win as text
%        str2double(get(hObject,'String')) returns contents of poisson_win as a double
written = str2double(get(hObject,'String'));
if ~isnan(written) && written >= 0 && written <= 0.5
    handles.data.poisson = written;
else
    errordlg('The poisson ratio must be between 0 and 0.5.','Error');
    set(handles.poisson_win,'String', num2str(handles.data.poisson));
end
guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function poisson_win_CreateFcn(hObject, eventdata, handles)
% hObject    handle to poisson_win (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end



function pix_durch_my_win_Callback(hObject, eventdata, handles)
% hObject    handle to pix_durch_my_win (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of pix_durch_my_win as text
%        str2double(get(hObject,'String')) returns contents of pix_durch_my_win as a double
written = str2double(get(hObject,'String'));
if ~isnan(written) && written > 0
    handles.data.pix_durch_my = written;
else
    errordlg('Please enter a positive number here.','Error');
    set(handles.pix_durch_my_win,'String', num2str(handles.data.pix_durch_my));
end
guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function pix_durch_my_win_CreateFcn(hObject, eventdata, handles)
% hObject    handle to pix_durch_my_win (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end


% --- Executes on button press in pushbutton5.
function pushbutton5_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

if isempty(handles.data.targetdir_name) || isequal(handles.data.targetdir_name,0) || ...
        isempty(handles.data.imagedir_name) || isequal(handles.data.imagedir_name,0) || ...
        isempty(handles.data.strainfile_name) || isequal(handles.data.strainfile_name,0)
        errordlg('Some of the file/directory names have not been specified properly.','Error');
        return;
end

hilf  = load('-mat', handles.data.strainfile_name);
hilf_name = fieldnames(hilf);
if all(strcmp(hilf_name, 'strain') == 0) 
        errordlg('Specified file with displacement data does not contain the strain structure.','Error');
        return;
else
    hilf_name = fieldnames(hilf.strain)
    if all(strcmp(hilf_name, 'pos') == 0) || all(strcmp(hilf_name, 'vec') == 0)
        errordlg('Specified file with displacement data does not contain the fields .pos/.vec.','Error');
        return;
    else
        handles.data.strain = hilf.strain;
    end
end
        
preview_settings(handles.data);
%delete(handles.figure1);


% --- Executes on button press in abort.
function abort_Callback(hObject, eventdata, handles)
% hObject    handle to abort (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
delete(handles.figure1);




% --- Executes during object creation, after setting all properties.
function pushbutton5_CreateFcn(hObject, eventdata, handles)
% hObject    handle to pushbutton5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called


% --- Executes during object deletion, before destroying properties.
function pushbutton5_DeleteFcn(hObject, eventdata, handles)
% hObject    handle to pushbutton5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


